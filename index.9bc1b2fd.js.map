{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,oDAKeC,ECLZ,W,sBDKkBC,I,aAEjBC,KAAKC,YAAc,GACnBD,KAAKE,KAAO,C,iBAGRC,IAAA,a,MAAN,W,kBAAAC,EAAAR,EAAA,CAAAQ,EAAAC,GAAAC,MAAA,SAAAC,I,IACQC,EAEEC,E,yEAFFD,EAAM,GAAuBE,OATtB,4CASW,aAAwBA,OAVxC,mCAU+B,WAAkCA,OAAzBC,EAAKV,YAAY,UAAkBS,OAAVC,EAAKT,M,SAEvDU,EAAAC,QAAMC,IAAIN,G,cAA3BC,EAAMM,EAAAC,KAAJP,KACRQ,QAAQC,IAAIV,G,kBACLC,G,0CALT,E,IAQAN,IAAA,e,MAAA,WACEH,KAAKE,MAAQ,C,IAGfC,IAAA,Y,MAAA,WACEH,KAAKE,KAAO,C,IAGVC,IAAA,Q,IAAJ,WACE,OAAOH,KAAKC,W,MAGd,SAAUkB,GACRnB,KAAKC,YAAckB,C,OChCpB,G,0BCAI,SAASC,IACdH,QAAQC,IAAIG,MAAMC,SAElBC,KAAKC,eAAeC,YAClB,oDAEmBC,YAAW,WAC9BH,KAAKC,eAAeC,YAAc,E,GACjC,I,CCFL,IAAME,EAAO,CACXC,OAAQC,SAASC,cAAc,gBAC/BC,QAASF,SAASC,cAAc,WAChCN,eAAgBK,SAASC,cAAc,eACvCE,qBAAsBH,SAASC,cAAc,oBAG/CH,EAAKH,eAAeC,YAAc,GAElC,IAAMQ,EAAgB,IAAInC,EAE1B6B,EAAKC,OAAOM,iBAAiB,UAE7B,SAAsBC,GACpBA,EAAMC,iBAKR,WACE,IAAKT,EAAKI,QAAQM,MAAMC,OACtB,OAGFL,EAAcM,MAAQZ,EAAKI,QAAQM,MAAMC,OAEzCL,EAAcO,YAEdP,EACGQ,WAAWR,EAAcM,OACzBG,MAAK,SAAAjC,GACJ,GAAKA,EAAKkC,QAAQC,OAAlB,CAkBAjB,EAAKH,eAAeC,YAAc,GAiCtCE,EAAKK,qBAAqBa,UAAY,GAVxC,SAA+BpC,GAC7BQ,QAAQC,IAAI,4CACZD,QAAQC,IAAIT,EAAKkC,SACjBhB,EAAKK,qBAAqBc,mBACxB,YACAC,EAAAlC,QAAUmC,qBAAqBvC,EAAKkC,S,CAzBlCM,CAAsBxC,IACtB,EAAAyC,EAAAC,eAEA,IAAMC,EAAe3C,EAAK4C,cAC1B1B,EAAKH,eAAeC,YAAc,YAAyBf,OAAb0C,EAAa,kBAEvC1B,YAAW,WAC7BC,EAAKH,eAAeC,YAAc,E,GACjC,I,KA7BH,CACEE,EAAKH,eAAeC,YAClB,0EAEmBC,YAAW,WAC9BC,EAAKH,eAAeC,YAAc,E,GACjC,I,KA+BN6B,MAAMlC,E,CArDTmC,E","sources":["src/js/fetch/fetch-films.js","<<jsx-config-pragma.js>>","src/js/error-function.js","src/js/filmoteka.js"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '3c2d3d1a4a9318a7ef02a0fdedccb03f';\nconst BASE_URL = 'https://api.themoviedb.org/3/search/movie';\n\nexport default class FilmsAPI {\n  constructor() {\n    this.searchQuery = '';\n    this.page = 1;\n  }\n\n  async fetchFilms() {\n    const url = `${BASE_URL}?api_key=${KEY}&query=${this.searchQuery}&page=${this.page}`;\n\n    const { data } = await axios.get(url);\n    console.log(url);\n    return data;\n  }\n\n  icrementPage() {\n    this.page += 1;\n  }\n\n  resetPage() {\n    this.page = 1;\n  }\n\n  get query() {\n    return this.searchQuery;\n  }\n\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n}\n",null,"export function onFetchError() {\n  console.log(error.message);\n\n  refs.notificationEl.textContent =\n    'Sorry, something going wrong... Please try again.';\n\n  const onCatchTimer = setTimeout(() => {\n    refs.notificationEl.textContent = '';\n  }, 2000);\n}\n","import FilmsAPI from './fetch/fetch-films';\nimport FilmCards from './markup/film-cards-markup';\nimport { hideElement, hideMark } from './markup/hide-elements';\nimport { onFetchError } from './error-function';\n// import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  formEl: document.querySelector('#search-form'),\n  inputEl: document.querySelector('#search'),\n  notificationEl: document.querySelector('.text-error'),\n  filmGalleryContainer: document.querySelector('.film-container'),\n};\n\nrefs.notificationEl.textContent = '';\n\nconst filmsSerchAPI = new FilmsAPI();\n\nrefs.formEl.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  searchPicturers();\n}\n\n// search function\nfunction searchPicturers() {\n  if (!refs.inputEl.value.trim()) {\n    return;\n  }\n\n  filmsSerchAPI.query = refs.inputEl.value.trim();\n\n  filmsSerchAPI.resetPage();\n\n  filmsSerchAPI\n    .fetchFilms(filmsSerchAPI.query)\n    .then(data => {\n      if (!data.results.length) {\n        refs.notificationEl.textContent =\n          'Sorry, there are no films matching your search query. Please try again.';\n\n        const noMatchTimer = setTimeout(() => {\n          refs.notificationEl.textContent = '';\n        }, 2000);\n\n        // Notify.failure(\n        //   'Sorry, there are no films matching your search query. Please try again.',\n        //   {\n        //     position: 'right-top',\n        //     fontSize: '12px',\n        //   }\n        // );\n        return;\n      }\n\n      refs.notificationEl.textContent = '';\n\n      clearMurkup();\n      appendFilmCardsMarkup(data);\n      hideElement();\n\n      const totalResults = data.total_results;\n      refs.notificationEl.textContent = `We found ${totalResults} films. Enjoy!`;\n\n      const succesTimer = setTimeout(() => {\n        refs.notificationEl.textContent = '';\n      }, 2000);\n\n      // Notify.success(`We found ${totalResults} films. Enjoy!`, {\n      //   position: 'right-top',\n      //   fontSize: '14px',\n      // });\n    })\n\n    .catch(onFetchError);\n}\n\n// markup functions\nfunction appendFilmCardsMarkup(data) {\n  console.log('Данные с бэка по запросу (data.results):');\n  console.log(data.results);\n  refs.filmGalleryContainer.insertAdjacentHTML(\n    'beforeend',\n    FilmCards.createFilmCardMarkup(data.results)\n  );\n}\n\nfunction clearMurkup() {\n  refs.filmGalleryContainer.innerHTML = '';\n}\n"],"names":["$bpxeT","parcelRequire","$3d4fbc75103df954$export$2e2bcd8739ae039","FilmsAPI","this","searchQuery","page","key","$parcel$interopDefault","$2TvXO","mark","_callee","url","data","concat","_this","$dIxxU","default","get","_ctx","sent","console","log","newQuery","$0c742ce462b9b671$export$238059e5c5b89ea2","error","message","refs","notificationEl","textContent","setTimeout","$0d1473df3547cfcd$var$refs","formEl","document","querySelector","inputEl","filmGalleryContainer","$0d1473df3547cfcd$var$filmsSerchAPI","addEventListener","event","preventDefault","value","trim","query","resetPage","fetchFilms","then","results","length","innerHTML","insertAdjacentHTML","$7PxVc","createFilmCardMarkup","$0d1473df3547cfcd$var$appendFilmCardsMarkup","$1caSa","hideElement","totalResults","total_results","catch","$0d1473df3547cfcd$var$searchPicturers"],"version":3,"file":"index.9bc1b2fd.js.map"}
{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SCAAC,EAAAD,EAAA,S,oDAKeE,ECLZ,W,sBDKkBC,I,aAEjBC,KAAKC,YAAc,E,iBAGfC,IAAA,a,MAAN,SAAiBC,G,kBAAjBC,EAAAP,EAAA,CAAAO,EAAAC,GAAAC,MAAA,SAAAC,I,IACQC,EAEEC,E,yEAFFD,EAAM,GAAuBE,OARtB,4CAQW,aAAwBA,OATxC,mCAS+B,WAAkCA,OAAzBC,EAAKV,YAAY,UAAaS,OAALP,G,SAElDS,EAAAC,QAAMC,IAAIN,G,cAA3BC,EAAMM,EAAAC,KAAJP,KACRQ,QAAQC,IAAIV,G,kBACLC,G,0CALT,E,IAQIP,IAAA,Q,IAAJ,WACE,OAAOF,KAAKC,W,MAGd,SAAUkB,GACRnB,KAAKC,YAAckB,C,OCvBpB,G,gFCAI,SAASC,EAAaC,GAC3BJ,QAAQC,IAAIG,EAAMC,SAElB,IAAMC,EAAUC,SAASC,cAAc,eAEvCF,EAAQG,YAAc,oDAEDC,YAAW,WAC9BJ,EAAQG,YAAc,E,GACrB,I,kBHKCE,EAAO,CACXC,OAAQL,SAASC,cAAc,gBAC/BK,QAASN,SAASC,cAAc,WAChCM,eAAgBP,SAASC,cAAc,eACvCO,qBAAsBR,SAASC,cAAc,oBAGzCQ,EAAgB,IAAInC,EASpBoC,EAAqB,IAAI9B,EAAAT,GAAJ,CAAe,aAP1B,CACdwC,WAAY,EACZC,aAAc,GACdC,aAAc,EACdlC,KAAM,IAIFmC,EAAOJ,EAAmBK,iBA4DhC,SAASC,EAAYC,GACnB,IAAMC,EAAcD,EAAMtC,KAC1B8B,EACGU,WAAWD,GACXE,MAAK,SAAAnC,IACJ,EAAAoC,EAAAC,aAAY,MACZ,EAAAC,EAAAC,eACAC,EAAsBxC,EAAKyC,Q,IAG5BC,MAAM/B,E,CAIX,SAAS6B,EAAsBC,GAC7BtB,EAAKI,qBAAqBoB,mBACxB,YACAC,EAAAxC,QAAUyC,qBAAqBJ,KAGjC,EAAAK,EAAAC,c,CA9EF5B,EAAKG,eAAeL,YAAc,GAElCE,EAAKC,OAAO4B,iBAAiB,UAE7B,SAAsBhB,GACpBA,EAAMiB,iBAMR,WACE,IAAK9B,EAAKE,QAAQ6B,MAAMC,OACtB,OAGF3B,EAAc4B,MAAQjC,EAAKE,QAAQ6B,MAAMC,OAEzCE,EAAAC,WAAWC,IAAI,YAAaF,EAAAG,SAC5B/B,EAAmB8B,IAAI,YAAaxB,GAEpCP,EACGU,WAAWL,GACXM,MAAK,SAAAnC,GACJ,GAAKA,EAAKyC,QAAQgB,OAAlB,CAYAtC,EAAKG,eAAeL,YAAc,IAElC,EAAAqB,EAAAC,eACAC,EAAsBxC,EAAKyC,SAE3BhB,EAAmBiC,MAAM1D,EAAK2D,gBAC9B,EAAAb,EAAAC,eAEAtB,EAAmBmC,GAAG,YAAa7B,GAEnC,IAAM8B,EAAe7D,EAAK2D,eAC1B,EAAAG,EAAAC,gBACA5C,EAAKG,eAAeL,YAAc,YAAyBhB,OAAb4D,EAAa,kBAEvC3C,YAAW,WAC7BC,EAAKG,eAAeL,YAAc,E,GACjC,I,KA5BH,EACE,EAAA6C,EAAAC,gBACA5C,EAAKG,eAAeL,YAClB,0EAEmBC,YAAW,WAC9BC,EAAKG,eAAeL,YAAc,E,GACjC,I,KAwBNyB,MAAM/B,E,CAjDTqD,IACA,EAAAF,EAAAC,e","sources":["src/js/filmoteka.js","src/js/fetch/fetch-films.js","<<jsx-config-pragma.js>>","src/js/error-function.js"],"sourcesContent":["import Pagination from 'tui-pagination';\nimport 'tui-pagination/dist/tui-pagination.css';\n\nimport FilmsAPI from './fetch/fetch-films';\nimport FilmCards from './markup/film-cards-markup';\n\nimport { pagination } from './filmoteka-popular';\nimport { popular } from './filmoteka-popular';\nimport { scrollOnTop } from './scroll/scroll-to-top';\nimport { clearMurkup } from './markup/clear-markup';\nimport { hideElement, hideMark } from './markup/hide-elements';\nimport { onFetchError } from './error-function';\nimport { toggleLoader } from './loader';\n\nconst refs = {\n  formEl: document.querySelector('#search-form'),\n  inputEl: document.querySelector('#search'),\n  notificationEl: document.querySelector('.text-error'),\n  filmGalleryContainer: document.querySelector('.film-container'),\n};\n\nconst filmsSerchAPI = new FilmsAPI();\n\nconst options = {\n  totalItems: 0,\n  itemsPerPage: 20,\n  visiblePages: 3,\n  page: 1,\n};\n\nconst paginationOnQuerry = new Pagination('pagination', options);\nconst page = paginationOnQuerry.getCurrentPage();\n\nrefs.notificationEl.textContent = '';\n\nrefs.formEl.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  searchPicturers();\n  toggleLoader();\n}\n\n// search function\nfunction searchPicturers() {\n  if (!refs.inputEl.value.trim()) {\n    return;\n  }\n\n  filmsSerchAPI.query = refs.inputEl.value.trim();\n\n  pagination.off('afterMove', popular);\n  paginationOnQuerry.off('afterMove', userByQuery);\n\n  filmsSerchAPI\n    .fetchFilms(page)\n    .then(data => {\n      if (!data.results.length) {\n        toggleLoader();\n        refs.notificationEl.textContent =\n          'Sorry, there are no films matching your search query. Please try again.';\n\n        const noMatchTimer = setTimeout(() => {\n          refs.notificationEl.textContent = '';\n        }, 2000);\n\n        return;\n      }\n\n      refs.notificationEl.textContent = '';\n\n      clearMurkup();\n      appendFilmCardsMarkup(data.results);\n\n      paginationOnQuerry.reset(data.total_results);\n      hideElement();\n\n      paginationOnQuerry.on('afterMove', userByQuery);\n\n      const totalResults = data.total_results;\n      toggleLoader();\n      refs.notificationEl.textContent = `We found ${totalResults} films. Enjoy!`;\n\n      const succesTimer = setTimeout(() => {\n        refs.notificationEl.textContent = '';\n      }, 2000);\n    })\n\n    .catch(onFetchError);\n}\n\nfunction userByQuery(event) {\n  const currentPage = event.page;\n  filmsSerchAPI\n    .fetchFilms(currentPage)\n    .then(data => {\n      scrollOnTop(265);\n      clearMurkup();\n      appendFilmCardsMarkup(data.results);\n    })\n\n    .catch(onFetchError);\n}\n\n// markup functions\nfunction appendFilmCardsMarkup(results) {\n  refs.filmGalleryContainer.insertAdjacentHTML(\n    'beforeend',\n    FilmCards.createFilmCardMarkup(results)\n  );\n\n  hideElement();\n}\n","import axios from 'axios';\n\nconst KEY = '3c2d3d1a4a9318a7ef02a0fdedccb03f';\nconst BASE_URL = 'https://api.themoviedb.org/3/search/movie';\n\nexport default class FilmsAPI {\n  constructor() {\n    this.searchQuery = '';\n  }\n\n  async fetchFilms(page) {\n    const url = `${BASE_URL}?api_key=${KEY}&query=${this.searchQuery}&page=${page}`;\n\n    const { data } = await axios.get(url);\n    console.log(url);\n    return data;\n  }\n\n  get query() {\n    return this.searchQuery;\n  }\n\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n}\n",null,"export function onFetchError(error) {\n  console.log(error.message);\n\n  const notifEl = document.querySelector('.text-error');\n\n  notifEl.textContent = 'Sorry, something going wrong... Please try again.';\n\n  const onCatchTimer = setTimeout(() => {\n    notifEl.textContent = '';\n  }, 2000);\n}\n"],"names":["$1VFfL","parcelRequire","$bpxeT","$3d4fbc75103df954$export$2e2bcd8739ae039","FilmsAPI","this","searchQuery","key","page","$parcel$interopDefault","$2TvXO","mark","_callee","url","data","concat","_this","$dIxxU","default","get","_ctx","sent","console","log","newQuery","$0c742ce462b9b671$export$238059e5c5b89ea2","error","message","notifEl","document","querySelector","textContent","setTimeout","$0d1473df3547cfcd$var$refs","formEl","inputEl","notificationEl","filmGalleryContainer","$0d1473df3547cfcd$var$filmsSerchAPI","$0d1473df3547cfcd$var$paginationOnQuerry","totalItems","itemsPerPage","visiblePages","$0d1473df3547cfcd$var$page","getCurrentPage","$0d1473df3547cfcd$var$userByQuery","event","currentPage","fetchFilms","then","$a8hHM","scrollOnTop","$aEj0R","clearMurkup","$0d1473df3547cfcd$var$appendFilmCardsMarkup","results","catch","insertAdjacentHTML","$7PxVc","createFilmCardMarkup","$1caSa","hideElement","addEventListener","preventDefault","value","trim","query","$huWAn","pagination","off","popular","length","reset","total_results","on","totalResults","$kvC6y","toggleLoader","$0d1473df3547cfcd$var$searchPicturers"],"version":3,"file":"index.fdb79243.js.map"}
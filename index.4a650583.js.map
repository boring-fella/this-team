{"mappings":"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","sources":["src/js/filmoteka.js","src/js/fetch/fetch-films.js","src/js/error-function.js"],"sourcesContent":["import Pagination from 'tui-pagination';\n\nimport FilmsAPI from './fetch/fetch-films';\nimport FilmCards from './markup/film-cards-markup';\n\nimport { pagination } from './filmoteka-popular';\nimport { popular } from './filmoteka-popular';\nimport { scrollOnTop } from './scroll/scroll-to-top';\nimport { clearMurkup } from './markup/clear-markup';\nimport { hideElement, hideSpan } from './markup/hide-elements';\nimport { onFetchError } from './error-function';\nimport { toggleLoader } from './loader';\nimport { saveCurrentFilmsToLocal } from './display-films';\n\nconst refs = {\n  formEl: document.querySelector('#search-form'),\n  inputEl: document.querySelector('#search'),\n  notificationEl: document.querySelector('.text-error'),\n  filmGalleryContainer: document.querySelector('.film-container'),\n  paginationInHome: document.querySelector('.pagination'),\n  notificationPictureEl: document.querySelector('#notification-picture'),\n};\n\nconst filmsSerchAPI = new FilmsAPI();\n\nconst options = {\n  totalItems: 0,\n  itemsPerPage: 20,\n  visiblePages: 5,\n  page: 1,\n  centerAlign: true,\n};\n\nconst paginationOnQuerry = new Pagination('pagination', options);\nconst page = paginationOnQuerry.getCurrentPage();\n\nrefs.notificationEl.style.color = '#ff001b';\nrefs.notificationEl.textContent = '';\n\nrefs.formEl.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  searchPicturers();\n}\n\n// search function\nfunction searchPicturers() {\n  if (!refs.inputEl.value.trim()) {\n    refs.notificationEl.style.color = '#ff001b';\n    refs.notificationEl.textContent = 'Please, type something.';\n\n    const noQueryTimer = setTimeout(() => {\n      refs.notificationEl.textContent = '';\n    }, 3000);\n\n    return;\n  }\n\n  toggleLoader();\n  filmsSerchAPI.query = refs.inputEl.value.trim();\n\n  pagination.off('afterMove', popular);\n  paginationOnQuerry.off('afterMove', userByQuery);\n\n  filmsSerchAPI\n    .fetchFilms(page)\n    .then(data => {\n      if (!data.results.length) {\n        toggleLoader();\n        clearMurkup();\n        refs.notificationEl.style.color = '#ff001b';\n        refs.notificationEl.textContent =\n          'Sorry, there are no films matching your search query. Please, try again.';\n\n        refs.paginationInHome.classList.add('tui-pagination-isHidden');\n        refs.notificationPictureEl.classList.add('section-main__bcg');\n\n        const noMatchTimer = setTimeout(() => {\n          refs.notificationEl.textContent = '';\n        }, 3000);\n\n        return;\n      }\n\n      refs.notificationEl.textContent = '';\n      refs.paginationInHome.classList.remove('tui-pagination-isHidden');\n      refs.notificationPictureEl.classList.remove('section-main__bcg');\n\n      clearMurkup();\n      appendFilmCardsMarkup(data.results);\n\n      paginationOnQuerry.reset(data.total_results);\n      hideElement();\n\n      paginationOnQuerry.on('afterMove', userByQuery);\n\n      const totalResults = data.total_results;\n      toggleLoader();\n      refs.notificationEl.style.color = '#00ff22';\n      refs.notificationEl.textContent = `We found ${totalResults} films. Enjoy!`;\n\n      const succesTimer = setTimeout(() => {\n        refs.notificationEl.textContent = '';\n      }, 3000);\n    })\n\n    .catch(onFetchError);\n}\n\nfunction userByQuery(event) {\n  const currentPage = event.page;\n  filmsSerchAPI\n    .fetchFilms(currentPage)\n    .then(data => {\n      scrollOnTop(0);\n      clearMurkup();\n      appendFilmCardsMarkup(data.results);\n    })\n\n    .catch(onFetchError);\n}\n\n// markup functions\nfunction appendFilmCardsMarkup(results) {\n  refs.filmGalleryContainer.insertAdjacentHTML(\n    'beforeend',\n    FilmCards.createFilmCardMarkup(results)\n  );\n  saveCurrentFilmsToLocal(results);\n  hideElement();\n  hideSpan();\n}\n","import axios from 'axios';\n\nconst KEY = '3c2d3d1a4a9318a7ef02a0fdedccb03f';\nconst BASE_URL = 'https://api.themoviedb.org/3/search/movie';\n\nexport default class FilmsAPI {\n  constructor() {\n    this.searchQuery = '';\n  }\n\n  async fetchFilms(page) {\n    const url = `${BASE_URL}?api_key=${KEY}&query=${this.searchQuery}&page=${page}`;\n\n    const { data } = await axios.get(url);\n\n    return data;\n  }\n\n  get query() {\n    return this.searchQuery;\n  }\n\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n}\n","export function onFetchError(error) {\n  console.log(error.message);\n\n  const notifEl = document.querySelector('.text-error');\n\n  notifEl.style.color = '#ff001b';\n  notifEl.textContent = 'Sorry, something going wrong... Please try again.';\n}\n"],"names":["$fb9GJ","parcelRequire","$2shzp","$f71e42fd928e5fe0$export$238059e5c5b89ea2","error","console","log","message","notifEl","document","querySelector","style","color","textContent","$c848cac843f338cf$var$refs","formEl","inputEl","notificationEl","filmGalleryContainer","paginationInHome","notificationPictureEl","$c848cac843f338cf$var$filmsSerchAPI","async","page","url","this","searchQuery","data","default","get","query","newQuery","constructor","$c848cac843f338cf$var$paginationOnQuerry","$parcel$interopDefault","totalItems","itemsPerPage","visiblePages","centerAlign","$c848cac843f338cf$var$page","getCurrentPage","$c848cac843f338cf$var$userByQuery","event","currentPage","fetchFilms","then","$dRsRU","scrollOnTop","$B4GFe","clearMurkup","$c848cac843f338cf$var$appendFilmCardsMarkup","results","catch","insertAdjacentHTML","$hgmNe","createFilmCardMarkup","$jkVf4","saveCurrentFilmsToLocal","$392Er","hideElement","hideSpan","addEventListener","preventDefault","value","trim","setTimeout","$gjiCh","toggleLoader","$6Xidn","pagination","off","popular","length","classList","add","remove","reset","total_results","on","totalResults","$c848cac843f338cf$var$searchPicturers"],"version":3,"file":"index.4a650583.js.map"}
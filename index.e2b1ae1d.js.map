{"mappings":"4sBAAA,IAAAA,EAAAC,EAAA,S,IAyCAC,EAAe,CAAEC,qBApCjB,SAA8BC,GAC5B,OAAOA,EACJC,KACC,SAAAC,G,IACEC,EAAWD,EAAXC,YACAC,EAAKF,EAALE,MACAC,EAAcH,EAAdG,eACAC,EAAIJ,EAAJI,KACAC,EAASL,EAATK,UACAC,EAAYN,EAAZM,aAEAC,GADcP,EAAdQ,eACYR,EAAZO,cAEA,MAAO,0EAGKE,OADQ,OAAhBR,EAjBV,qKAFsB,kCAmB2CA,EACxD,WAE+BQ,OAFtBP,EAAM,2IAKVO,OAH0BP,GAASC,GAAkBC,EAAK,uGAK/BK,QAF3B,EAAAf,EAAAgB,eAAcL,IAAc,GAC7B,mGAGCI,OAF2BH,EAAaK,MAAM,EAAG,IAAM,GAAG,qDAG3DF,OADCG,KAAKC,MAAqB,GAAfN,GAAqB,GACjC,uE,IAOVO,KAAK,G,wCCtCH,SAASC,IACd,IAAMC,EAAiBC,SAASC,iBAAiB,sBAE5CC,GAAmB,EAAnBC,GAAmB,EAAnBC,OAAmBC,E,IAAxB,QAAKC,EAAAC,EAAuBR,EAAcS,OAAAC,cAArCP,GAAAI,EAAAC,EAAmBG,QAAAC,MAAnBT,GAAmB,GAAnBI,EAAmBM,MACRC,UAAUC,IAAI,gB,WADzBX,GAAmB,EAAnBC,EAAmBW,C,aAAnBb,GAAmB,MAAnBK,EAAmBS,QAAnBT,EAAmBS,Q,YAAnBb,E,MAAAC,C,wDCHP,IAAAa,EAAAvC,EAAA,S,oDAKewC,ECLZ,W,sBDKkBC,I,aAEjBC,KAAKC,KAAO,C,iBAGRC,IAAA,gB,MAAN,W,kBAAAC,EAAAN,EAAA,CAAAM,EAAAC,GAAAC,MAAA,SAAAC,I,IACQC,EAIFC,EADMC,E,yEAHJF,EAAM,GAAiCnC,OARhC,wCAQW,uBAAiCA,OATjD,mCASyC,UAAkBA,OAAVsC,EAAKT,M,SAIpDU,EAAAC,QAAMC,IAAIN,G,cAAhBC,EAAoBM,EAAAC,KADtBN,EACED,EADFQ,KAAQP,QAEVQ,QAAQC,IAAIX,G,kBACLE,G,0CAPT,E,IAUAP,IAAA,e,MAAA,WACEF,KAAKC,MAAQ,C,IAGfC,IAAA,Y,MAAA,WACEF,KAAKC,KAAO,C,OCzBb,G,0BCAHkB,EAAA7D,EAAA,SAEA,SAAS8D,EAAwBC,GAC/BF,EAAAP,QAAWU,KAAK,gBAAiBD,E,CCKnC,IAAME,EAAO,CACXC,qBAAsB5C,SAAS6C,cAAc,oBAGzCC,EAAmB,IAAI5B,EAE7B6B,OAAOC,iBAAiB,QAExB,SAAsBC,GACpBZ,QAAQC,IAAI,yDAEZQ,EAAiBI,gBAAgBC,MAAK,SAAAtB,IAMxC,SAA+BA,GAC7BQ,QAAQC,IAAIT,GACZW,EAAwBX,GACxBc,EAAKC,qBAAqBQ,mBACxB,YACAC,EAAArB,QAAUpD,qBAAqBiD,KAGjC,EAAAyB,EAAAC,c,CAbEC,CAAsB3B,E","sources":["src/js/markup/film-cards-markup.js","src/js/markup/hide-elements.js","src/js/fetch/fetch-popular-films.js","<<jsx-config-pragma.js>>","src/js/display-films.js","src/js/filmoteka-popular.js"],"sourcesContent":["import { findGenreById } from '../fetch/fetch-genres';\nconst BASE_IMAGES_URL = 'https://image.tmdb.org/t/p/w500';\nconst RES_PICTURE =\n  'https://pixabay.com/get/g9b007b1f29e9adc0ae515b947bf22984ff721d4bc4a6c9569ee9e3e56c787e6fe6d0ccd309ad89af33b0973e7d3810b7aeb75335e9a93324c7a7b93a69f4f327_1280.jpg';\n\nfunction createFilmCardMarkup(film) {\n  return film\n    .map(\n      ({\n        poster_path,\n        title,\n        original_title,\n        name,\n        genre_ids,\n        release_date,\n        first_air_date,\n        vote_average,\n      }) => {\n        return `<div class=\"film__card\">\n          <img class=\"film-card__image\" src=\"${\n            poster_path === null ? RES_PICTURE : BASE_IMAGES_URL + poster_path\n          }\" alt=\"${title}\" loading=\"lazy\" title=\"Click to enlarge\"/>\n          <div class=\"film-card__features-wrap\">\n            <p class=\"film-card__title\">${title || original_title || name}</p>\n            <div class=\"film-card__tech-wrap\">\n              <p class=\"film-card__features\">${\n                findGenreById(genre_ids) || ''\n              }<span class=\"film-card__features-mark\"> |</span></p>\n              <p class=\"film-card__date\">${release_date.slice(0, 4) || ''}</p>\n              <p class=\"film-card__rating\">${\n                Math.round(vote_average * 10) / 10\n              }</p>\n            </div>\n          </div>\n        </div>\n        `;\n      }\n    )\n    .join('');\n}\n\nexport default { createFilmCardMarkup };\n","export function hideElement() {\n  const ratingElements = document.querySelectorAll('.film-card__rating');\n\n  for (const ratingElement of ratingElements) {\n    ratingElement.classList.add('elem-isHidden');\n  }\n}\n\n// export default { hideElement };\n\nexport function hideMark() {\n  const dateElements = document.querySelectorAll('.film-card__date');\n  const featuresElements = document.querySelectorAll('.film-card__features');\n  const featuresMarkElements = document.querySelectorAll(\n    '.film-card__features-mark'\n  );\n\n  //   console.log(dateElements);\n  //   console.log(featuresElements);\n  //   console.log(featuresMarkElements);\n\n  for (const dateElement of dateElements) {\n    console.log(dateElement.textContent.length);\n\n    if (!dateElement.textContent.length) {\n      featuresMarkElements.classList.add('elem-isHidden');\n    }\n  }\n}\n","import axios from 'axios';\n\nconst KEY = '3c2d3d1a4a9318a7ef02a0fdedccb03f';\nconst BASE_URL = 'https://api.themoviedb.org/3/trending';\n\nexport default class PopFilmsAPI {\n  constructor() {\n    this.page = 1;\n  }\n\n  async fetchPopFilms() {\n    const url = `${BASE_URL}/movie/day?api_key=${KEY}&page=${this.page}`;\n\n    const {\n      data: { results },\n    } = await axios.get(url);\n    console.log(url);\n    return results;\n  }\n\n  icrementPage() {\n    this.page += 1;\n  }\n\n  resetPage() {\n    this.page = 1;\n  }\n}\n",null,"import storageAPI from './local-storage-api';\n\nfunction saveCurrentFilmsToLocal(films) {\n  storageAPI.save('display-films', films);\n}\n\nfunction getFilmFromLocal(id) {\n  const localFilms = storageAPI.load('display-films');\n  const currentFilm = localFilms.find(film => film.id === id);\n  return currentFilm;\n}\n\nexport { saveCurrentFilmsToLocal, getFilmFromLocal };\n","import PopFilmsAPI from './fetch/fetch-popular-films';\nimport FilmCards from './markup/film-cards-markup';\n\nimport { hideElement, hideMark } from './markup/hide-elements';\n\nimport { saveCurrentFilmsToLocal, getFilmFromLocal } from './display-films';\n\n\nconst refs = {\n  filmGalleryContainer: document.querySelector('.film-container'),\n};\n\nconst popFilmsSerchAPI = new PopFilmsAPI();\n\nwindow.addEventListener('load', onWindowLoad);\n\nfunction onWindowLoad(event) {\n  console.log('Загрузка страницы и приход популярных фильмов с бэка:');\n\n  popFilmsSerchAPI.fetchPopFilms().then(results => {\n    appendFilmCardsMarkup(results);\n  });\n}\n\n// markup functions\nfunction appendFilmCardsMarkup(results) {\n  console.log(results);\n  saveCurrentFilmsToLocal(results);\n  refs.filmGalleryContainer.insertAdjacentHTML(\n    'beforeend',\n    FilmCards.createFilmCardMarkup(results)\n  );\n\n  hideElement();\n}\n"],"names":["$8y4hi","parcelRequire","$5b379bf7228e4cdf$export$2e2bcd8739ae039","createFilmCardMarkup","film","map","param","poster_path","title","original_title","name","genre_ids","release_date","vote_average","first_air_date","concat","findGenreById","slice","Math","round","join","$0def588061ff6997$export$7669482c90f5c50f","ratingElements","document","querySelectorAll","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","classList","add","err","return","$bpxeT","$06d0d63b5977ab2a$export$2e2bcd8739ae039","PopFilmsAPI","this","page","key","$parcel$interopDefault","$2TvXO","mark","_callee","url","ref","results","_this","$dIxxU","default","get","_ctx","sent","data","console","log","$f3gYz","$257520e088848777$export$2dcfa1c633621df3","films","save","$cbd2aef0837a7fff$var$refs","filmGalleryContainer","querySelector","$cbd2aef0837a7fff$var$popFilmsSerchAPI","window","addEventListener","event","fetchPopFilms","then","insertAdjacentHTML","$7PxVc","$1caSa","hideElement","$cbd2aef0837a7fff$var$appendFilmCardsMarkup"],"version":3,"file":"index.e2b1ae1d.js.map"}
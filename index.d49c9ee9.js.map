{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SCAAC,EAAAD,EAAA,S,qECAAE,EAAAF,EAAA,SAEO,SAASG,IACdC,YAAW,KACTF,EAAAG,KAAKC,eAAeC,YAAc,EAAE,GACnC,I,4CCLLL,EAAAF,EAAA,SAEO,SAASQ,EAAaC,GAC3BC,QAAQC,IAAIF,EAAMG,SAElBV,EAAAG,KAAKC,eAAeO,MAAMC,MAAQ,UAClCZ,EAAAG,KAAKC,eAAeC,YAClB,mD,+BHSJ,MAAMQ,EAAgB,ICZP,MAMbC,iBAAiBC,GACf,MAAMC,EAAM,GAAGC,EAAAC,iCAAiCD,EAAAE,aAAaC,KAAKC,oBAAoBN,KAEhFO,KAAEA,SAAevB,EAAAwB,QAAMC,IAAIR,GAEjC,OAAOM,C,CAGLG,YACF,OAAOL,KAAKC,W,CAGVI,UAAMC,GACRN,KAAKC,YAAcK,C,CAlBrBC,cACEP,KAAKC,YAAc,GACnBD,KAAKQ,UAAY,E,GDmBfC,EAAqB,IAAIC,EAAAjC,GAAJ,CAAe,aAR1B,CACdkC,WAAY,EACZC,aAAc,GACdC,aAAc,EACdlB,KAAM,EACNmB,aAAa,IAITC,EAAON,EAAmBO,iBA+EhC,SAASC,EAAYC,GACnB,MAAMC,EAAcD,EAAMvB,KAC1BF,EACG2B,WAAWD,GACXE,MAAKnB,KACJ,EAAAoB,EAAAC,aAAY,IACZ,EAAAC,EAAAC,eACAC,EAAsBxB,EAAKyB,QAAQ,IAGpCC,MAAM1C,E,CAGX,SAASwC,EAAsBC,GAC7B/C,EAAAG,KAAK8C,qBAAqBC,mBACxB,YACAC,EAAA5B,QAAU6B,qBAAqBL,KAEjC,EAAAM,EAAAC,yBAAwBP,IACxB,EAAAQ,EAAAC,gBACA,EAAAD,EAAAE,W,CAjGFzD,EAAAG,KAAKC,eAAeO,MAAMC,MAAQ,UAClCZ,EAAAG,KAAKC,eAAeC,YAAc,GAElCL,EAAAG,KAAKuD,OAAOC,iBAAiB,UAE7B,SAAsBrB,IACpB,EAAAsB,EAAAC,gBACAvB,EAAMwB,iBAKR,WACE,IAAK9D,EAAAG,KAAK4D,QAAQC,MAAMC,OAMtB,OALA,EAAAL,EAAAC,gBACA7D,EAAAG,KAAKC,eAAeO,MAAMC,MAAQ,UAClCZ,EAAAG,KAAKC,eAAeC,YAAc,+BAElCJ,IAMF,GAFAY,EAAcY,MAAQzB,EAAAG,KAAK4D,QAAQC,MAAMC,OAErCpD,EAAce,YAAcf,EAAcQ,YAE5C,YADA,EAAAuC,EAAAC,gBAIFK,EAAAC,WAAWC,IAAI,YAAaF,EAAAG,SAC5BxC,EAAmBuC,IAAI,YAAa/B,GAEpCxB,EACG2B,WAAWL,GACXM,MAAKnB,IACJ,IAAKA,EAAKyB,QAAQuB,OAahB,OAZA,EAAAV,EAAAC,iBACA,EAAAjB,EAAAC,eACA7C,EAAAG,KAAKC,eAAeO,MAAMC,MAAQ,UAClCZ,EAAAG,KAAKC,eAAeC,YAClB,2EAEFL,EAAAG,KAAKoE,iBAAiBC,UAAUC,IAAI,2BACpCzE,EAAAG,KAAKuE,sBAAsBF,UAAUC,IAAI,qBAEzCxE,SAEAY,EAAce,UAAY,IAI5Bf,EAAce,UAAYf,EAAcY,MAExCzB,EAAAG,KAAKC,eAAeC,YAAc,GAClCL,EAAAG,KAAKoE,iBAAiBC,UAAUG,OAAO,2BACvC3E,EAAAG,KAAKuE,sBAAsBF,UAAUG,OAAO,sBAE5C,EAAAjC,EAAAC,aAAY,IACZ,EAAAC,EAAAC,eAEAC,EAAsBxB,EAAKyB,UAC3B,EAAAa,EAAAC,gBACAhC,EAAmB+C,MAAMtD,EAAKuD,gBAC9B,EAAAtB,EAAAC,eAEA3B,EAAmBiD,GAAG,YAAazC,GAEnC,MAAM0C,EAAezD,EAAKuD,cAE1B7E,EAAAG,KAAKC,eAAeO,MAAMC,MAAQ,UAClCZ,EAAAG,KAAKC,eAAeC,YAAc,YAAY0E,kBAE9C9E,GAA0B,IAE3B+C,MAAM1C,E,CAlET0E,E","sources":["src/js/filmoteka.js","src/js/fetch/fetch-films.js","src/js/utils-js/settimeout.js","src/js/utils-js/error-function.js"],"sourcesContent":["import Pagination from 'tui-pagination';\n\nimport FilmsAPI from './fetch/fetch-films';\nimport FilmCards from './markup/film-cards-markup';\n\nimport { refs } from './refs/filmoteka-refs';\nimport { pagination } from './filmoteka-popular';\nimport { popular } from './filmoteka-popular';\nimport { setClearTextContentTimer } from './utils-js/settimeout';\nimport { scrollOnTop } from './scroll/scroll-to-top';\nimport { clearMurkup } from './markup/clear-markup';\nimport { hideElement, hideSpan } from './markup/hide-elements';\nimport { onFetchError } from './utils-js/error-function';\nimport { toggleLoader } from './loader';\nimport { saveCurrentFilmsToLocal } from './display-films';\n\nconst filmsSerchAPI = new FilmsAPI();\n\nconst options = {\n  totalItems: 0,\n  itemsPerPage: 20,\n  visiblePages: 5,\n  page: 1,\n  centerAlign: true,\n};\n\nconst paginationOnQuerry = new Pagination('pagination', options);\nconst page = paginationOnQuerry.getCurrentPage();\n\nrefs.notificationEl.style.color = '#ff001b';\nrefs.notificationEl.textContent = '';\n\nrefs.formEl.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  toggleLoader();\n  event.preventDefault();\n  searchPicturers();\n}\n\n// search function\nfunction searchPicturers() {\n  if (!refs.inputEl.value.trim()) {\n    toggleLoader();\n    refs.notificationEl.style.color = '#ff001b';\n    refs.notificationEl.textContent = 'Please, type something.';\n\n    setClearTextContentTimer();\n    return;\n  }\n\n  filmsSerchAPI.query = refs.inputEl.value.trim();\n\n  if (filmsSerchAPI.lastQuery === filmsSerchAPI.searchQuery) {\n    toggleLoader();\n    return;\n  }\n\n  pagination.off('afterMove', popular);\n  paginationOnQuerry.off('afterMove', userByQuery);\n\n  filmsSerchAPI\n    .fetchFilms(page)\n    .then(data => {\n      if (!data.results.length) {\n        toggleLoader();\n        clearMurkup();\n        refs.notificationEl.style.color = '#ff001b';\n        refs.notificationEl.textContent =\n          'Sorry, there are no films matching your search query. Please, try again.';\n\n        refs.paginationInHome.classList.add('tui-pagination-isHidden');\n        refs.notificationPictureEl.classList.add('section-main__bcg');\n\n        setClearTextContentTimer();\n\n        filmsSerchAPI.lastQuery = '';\n        return;\n      }\n\n      filmsSerchAPI.lastQuery = filmsSerchAPI.query;\n\n      refs.notificationEl.textContent = '';\n      refs.paginationInHome.classList.remove('tui-pagination-isHidden');\n      refs.notificationPictureEl.classList.remove('section-main__bcg');\n\n      scrollOnTop(0);\n      clearMurkup();\n\n      appendFilmCardsMarkup(data.results);\n      toggleLoader();\n      paginationOnQuerry.reset(data.total_results);\n      hideElement();\n\n      paginationOnQuerry.on('afterMove', userByQuery);\n\n      const totalResults = data.total_results;\n\n      refs.notificationEl.style.color = '#00ff22';\n      refs.notificationEl.textContent = `We found ${totalResults} films. Enjoy!`;\n\n      setClearTextContentTimer();\n    })\n    .catch(onFetchError);\n}\n\nfunction userByQuery(event) {\n  const currentPage = event.page;\n  filmsSerchAPI\n    .fetchFilms(currentPage)\n    .then(data => {\n      scrollOnTop(0);\n      clearMurkup();\n      appendFilmCardsMarkup(data.results);\n    })\n\n    .catch(onFetchError);\n}\n\nfunction appendFilmCardsMarkup(results) {\n  refs.filmGalleryContainer.insertAdjacentHTML(\n    'beforeend',\n    FilmCards.createFilmCardMarkup(results)\n  );\n  saveCurrentFilmsToLocal(results);\n  hideElement();\n  hideSpan();\n}\n","import axios from 'axios';\n\nimport { KEY, BASE_URL } from './key-url';\n\nexport default class FilmsAPI {\n  constructor() {\n    this.searchQuery = '';\n    this.lastQuery = '';\n  }\n\n  async fetchFilms(page) {\n    const url = `${BASE_URL}/search/movie?api_key=${KEY}&query=${this.searchQuery}&page=${page}`;\n\n    const { data } = await axios.get(url);\n\n    return data;\n  }\n\n  get query() {\n    return this.searchQuery;\n  }\n\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n}\n","import { refs } from '../refs/filmoteka-refs';\n\nexport function setClearTextContentTimer() {\n  setTimeout(() => {\n    refs.notificationEl.textContent = '';\n  }, 3000);\n}\n","import { refs } from '../refs/filmoteka-refs';\n\nexport function onFetchError(error) {\n  console.log(error.message);\n\n  refs.notificationEl.style.color = '#ff001b';\n  refs.notificationEl.textContent =\n    'Sorry, something going wrong... Please try again.';\n}\n"],"names":["$fb9GJ","parcelRequire","$2shzp","$bHp3l","$1f85049aa06ef347$export$4f04f3e8603d443b","setTimeout","refs","notificationEl","textContent","$c567e0baf5d6a548$export$238059e5c5b89ea2","error","console","log","message","style","color","$c848cac843f338cf$var$filmsSerchAPI","async","page","url","$dFv1e","BASE_URL","KEY","this","searchQuery","data","default","get","query","newQuery","constructor","lastQuery","$c848cac843f338cf$var$paginationOnQuerry","$parcel$interopDefault","totalItems","itemsPerPage","visiblePages","centerAlign","$c848cac843f338cf$var$page","getCurrentPage","$c848cac843f338cf$var$userByQuery","event","currentPage","fetchFilms","then","$dRsRU","scrollOnTop","$B4GFe","clearMurkup","$c848cac843f338cf$var$appendFilmCardsMarkup","results","catch","filmGalleryContainer","insertAdjacentHTML","$hgmNe","createFilmCardMarkup","$jkVf4","saveCurrentFilmsToLocal","$392Er","hideElement","hideSpan","formEl","addEventListener","$gjiCh","toggleLoader","preventDefault","inputEl","value","trim","$6Xidn","pagination","off","popular","length","paginationInHome","classList","add","notificationPictureEl","remove","reset","total_results","on","totalResults","$c848cac843f338cf$var$searchPicturers"],"version":3,"file":"index.d49c9ee9.js.map"}
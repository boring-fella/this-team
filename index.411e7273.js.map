{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,8BCAO,SAASC,IACdC,QAAQC,IAAIC,MAAMC,SAElBC,KAAKC,eAAeC,YAClB,oDAEmBC,YAAW,KAC9BH,KAAKC,eAAeC,YAAc,EAAE,GACnC,I,CCFL,MAAME,EAAO,CACXC,OAAQC,SAASC,cAAc,gBAC/BC,QAASF,SAASC,cAAc,WAChCN,eAAgBK,SAASC,cAAc,eACvCE,qBAAsBH,SAASC,cAAc,oBAG/CH,EAAKH,eAAeC,YAAc,GAElC,MAAMQ,EAAgB,IFVP,MAMbC,mBACE,MAAMC,EAAM,4FAAoCC,KAAKC,oBAAoBD,KAAKE,QAExEC,KAAEA,SAAevB,EAAAwB,QAAMC,IAAIN,GAEjC,OADAhB,QAAQC,IAAIe,GACLI,C,CAGTG,eACEN,KAAKE,MAAQ,C,CAGfK,YACEP,KAAKE,KAAO,C,CAGVM,YACF,OAAOR,KAAKC,W,CAGVO,UAAMC,GACRT,KAAKC,YAAcQ,C,CA1BrBC,cACEV,KAAKC,YAAc,GACnBD,KAAKE,KAAO,C,GEShBX,EAAKC,OAAOmB,iBAAiB,UAE7B,SAAsBC,GACpBA,EAAMC,iBAKR,WACE,IAAKtB,EAAKI,QAAQmB,MAAMC,OACtB,OAGFlB,EAAcW,MAAQjB,EAAKI,QAAQmB,MAAMC,OAEzClB,EAAcU,YAEdV,EACGmB,WAAWnB,EAAcW,OACzBS,MAAKd,IACJ,IAAKA,EAAKe,QAAQC,OAAQ,CACxB5B,EAAKH,eAAeC,YAClB,0EAEmBC,YAAW,KAC9BC,EAAKH,eAAeC,YAAc,EAAE,GACnC,KASH,M,CAGFE,EAAKH,eAAeC,YAAc,GAiCtCE,EAAKK,qBAAqBwB,UAAY,GAVxC,SAA+BjB,GAC7BpB,QAAQC,IAAI,4CACZD,QAAQC,IAAImB,EAAKe,SACjB3B,EAAKK,qBAAqByB,mBACxB,YACAC,EAAAlB,QAAUmB,qBAAqBpB,EAAKe,S,CAzBlCM,CAAsBrB,IACtB,EAAAsB,EAAAC,eAEA,MAAMC,EAAexB,EAAKyB,cAC1BrC,EAAKH,eAAeC,YAAc,YAAYsC,kBAE1BrC,YAAW,KAC7BC,EAAKH,eAAeC,YAAc,EAAE,GACnC,IAAK,IAQTwC,MAAM/C,E,CArDTgD,E","sources":["src/js/fetch/fetch-films.js","src/js/error-function.js","src/js/filmoteka.js"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '3c2d3d1a4a9318a7ef02a0fdedccb03f';\nconst BASE_URL = 'https://api.themoviedb.org/3/search/movie';\n\nexport default class FilmsAPI {\n  constructor() {\n    this.searchQuery = '';\n    this.page = 1;\n  }\n\n  async fetchFilms() {\n    const url = `${BASE_URL}?api_key=${KEY}&query=${this.searchQuery}&page=${this.page}`;\n\n    const { data } = await axios.get(url);\n    console.log(url);\n    return data;\n  }\n\n  icrementPage() {\n    this.page += 1;\n  }\n\n  resetPage() {\n    this.page = 1;\n  }\n\n  get query() {\n    return this.searchQuery;\n  }\n\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n}\n","export function onFetchError() {\n  console.log(error.message);\n\n  refs.notificationEl.textContent =\n    'Sorry, something going wrong... Please try again.';\n\n  const onCatchTimer = setTimeout(() => {\n    refs.notificationEl.textContent = '';\n  }, 2000);\n}\n","import FilmsAPI from './fetch/fetch-films';\nimport FilmCards from './markup/film-cards-markup';\nimport { hideElement, hideMark } from './markup/hide-elements';\nimport { onFetchError } from './error-function';\n// import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  formEl: document.querySelector('#search-form'),\n  inputEl: document.querySelector('#search'),\n  notificationEl: document.querySelector('.text-error'),\n  filmGalleryContainer: document.querySelector('.film-container'),\n};\n\nrefs.notificationEl.textContent = '';\n\nconst filmsSerchAPI = new FilmsAPI();\n\nrefs.formEl.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  searchPicturers();\n}\n\n// search function\nfunction searchPicturers() {\n  if (!refs.inputEl.value.trim()) {\n    return;\n  }\n\n  filmsSerchAPI.query = refs.inputEl.value.trim();\n\n  filmsSerchAPI.resetPage();\n\n  filmsSerchAPI\n    .fetchFilms(filmsSerchAPI.query)\n    .then(data => {\n      if (!data.results.length) {\n        refs.notificationEl.textContent =\n          'Sorry, there are no films matching your search query. Please try again.';\n\n        const noMatchTimer = setTimeout(() => {\n          refs.notificationEl.textContent = '';\n        }, 2000);\n\n        // Notify.failure(\n        //   'Sorry, there are no films matching your search query. Please try again.',\n        //   {\n        //     position: 'right-top',\n        //     fontSize: '12px',\n        //   }\n        // );\n        return;\n      }\n\n      refs.notificationEl.textContent = '';\n\n      clearMurkup();\n      appendFilmCardsMarkup(data);\n      hideElement();\n\n      const totalResults = data.total_results;\n      refs.notificationEl.textContent = `We found ${totalResults} films. Enjoy!`;\n\n      const succesTimer = setTimeout(() => {\n        refs.notificationEl.textContent = '';\n      }, 2000);\n\n      // Notify.success(`We found ${totalResults} films. Enjoy!`, {\n      //   position: 'right-top',\n      //   fontSize: '14px',\n      // });\n    })\n\n    .catch(onFetchError);\n}\n\n// markup functions\nfunction appendFilmCardsMarkup(data) {\n  console.log('Данные с бэка по запросу (data.results):');\n  console.log(data.results);\n  refs.filmGalleryContainer.insertAdjacentHTML(\n    'beforeend',\n    FilmCards.createFilmCardMarkup(data.results)\n  );\n}\n\nfunction clearMurkup() {\n  refs.filmGalleryContainer.innerHTML = '';\n}\n"],"names":["$2shzp","parcelRequire","$f71e42fd928e5fe0$export$238059e5c5b89ea2","console","log","error","message","refs","notificationEl","textContent","setTimeout","$c848cac843f338cf$var$refs","formEl","document","querySelector","inputEl","filmGalleryContainer","$c848cac843f338cf$var$filmsSerchAPI","async","url","this","searchQuery","page","data","default","get","icrementPage","resetPage","query","newQuery","constructor","addEventListener","event","preventDefault","value","trim","fetchFilms","then","results","length","innerHTML","insertAdjacentHTML","$hgmNe","createFilmCardMarkup","$c848cac843f338cf$var$appendFilmCardsMarkup","$392Er","hideElement","totalResults","total_results","catch","$c848cac843f338cf$var$searchPicturers"],"version":3,"file":"index.411e7273.js.map"}